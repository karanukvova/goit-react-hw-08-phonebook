{"version":3,"file":"static/js/280.8939c94b.chunk.js","mappings":"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","sources":["components/contactForm/contactForm.styled.jsx","components/contactForm/contactForm.js","components/contactList/contactList.styled.jsx","components/contactList/contactList.js","components/filter/filter.styled.jsx","components/filter/filter.js","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const StyledContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  margin-bottom: 60px;\n`;\nexport const StyledContactLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: 000;\n`;\nexport const StyledContactInput = styled.input`\n  padding-left: 10px;\n  padding-right: 10px;\n  width: 350px;\n  height: 30px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n  &:focus {\n    outline: 1px solid #00b451;\n  }\n`;\nexport const ContactsSubmitButton = styled.button`\n  width: 170px;\n  height: 51px;\n  font-family: inherit;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.19;\n  letter-spacing: 0.04em;\n  color: #ffffff;\n  background-color: #4d5ae5;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  cursor: pointer;\n  border-radius: 4px;\n  border: inherit;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    background-color: #404bbf;\n  }\n  &:focus {\n    background: #404bbf;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;","\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contactsSlice';\n\nimport { selectContacts } from 'redux/selectors';\nimport { ContactsSubmitButton, StyledContactForm, StyledContactInput, StyledContactLabel } from './contactForm.styled';\n\nfunction ContactForm() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const onSubmitData = data => {\n    let nameArray = [];\n    nameArray = contacts.map(cur => cur.name);\n    if (!nameArray.includes(data.name)) {\n      dispatch(addContactThunk(data));\n    } else {\n      alert(' Контакт вже є у телефонній книзі!!!');\n    }\n  };\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = event => {\n    if (event.target.name === 'name') {\n        setName(event.target.value);\n    } else if (event.target.name === 'number') {\n      setNumber(event.target.value);\n    }\n    \n    }\n\n\n    const handleSubmit = event => {\n        event.preventDefault();\n\n        const contactData = {\n          name,\n          number,\n        };\n\n        onSubmitData(contactData);\n      setName('')\n      setNumber('');\n    }\n\n\n\n    return (\n      <StyledContactForm onSubmit={handleSubmit}>\n        <StyledContactLabel htmlFor=\"name\">\n          Name:\n          <StyledContactInput\n            id=\"name\"\n            onChange={handleInputChange}\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </StyledContactLabel>\n        <StyledContactLabel htmlFor=\"number\">\n          Number:\n          <StyledContactInput\n            id=\"number\"\n            onChange={handleInputChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </StyledContactLabel>\n        <ContactsSubmitButton type=\"submit\">Add contact</ContactsSubmitButton>\n      </StyledContactForm>\n    );\n  \n  }\nexport default ContactForm","import styled from 'styled-components';\nexport const StyledContactsList = styled.ul`\n  width: 350px;\n  list-style: none;\n  margin-left: 10px;\n  padding: 0;\n  color: var(--global-black-color);\n`;\nexport const StyledContactsItem = styled.li`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n`;\nexport const StyledContactsItemCircle = styled.span`\n  width: 10px;\n  height: 10px;\n  margin: 0;\n  padding: 0;\n  background-color: #00b451;\n  border-radius: 50%;\n`;\nexport const StyledContactsItemName = styled.p`\n  font-weight: 500;\n  color: 000;\n`;\nexport const StyledContactsItemNumber = styled.span`\n  margin-left: 5px;\n`;\nexport const StyledContactsItemButton = styled.button`\n  width: 70px;\n  height: 30px;\n  margin-left: auto;\n  background-color: #4d5ae5;\n  color: #ffffff;\n  border: none;\n  border-radius: 5px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n  cursor: pointer;\n  &:hover {\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    background-color: #404bbf;\n  }\n  &:focus {\n    background: #404bbf;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  }\n`;","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk } from 'redux/contactsSlice';\n\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { StyledContactsItem, StyledContactsItemButton, StyledContactsItemCircle, StyledContactsItemName, StyledContactsItemNumber, StyledContactsList } from './contactList.styled';\nfunction ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const filterArr = fArr => {\n    let newArr = [];\n    if (filter === '') {\n      newArr = fArr;\n    } else {\n      newArr = fArr.filter(cur => cur.name.toUpperCase().includes(filter));\n    }\n\n    return newArr;\n  };\n\n  const deleteId = Id => {\n    dispatch(deleteContactThunk(Id));\n  };\n  const CreateList = () => {\n    const arr = filterArr(contacts)\n    return arr.map(contact => {\n      return (\n        <StyledContactsItem key={contact.id}>\n          <StyledContactsItemCircle></StyledContactsItemCircle>\n          <StyledContactsItemName>\n            {contact.name}:\n            <StyledContactsItemNumber>\n              {contact.number}\n            </StyledContactsItemNumber>\n          </StyledContactsItemName>\n          <StyledContactsItemButton data-id={contact.id} onClick={() => deleteId(contact.id)}>\n            Delete\n          </StyledContactsItemButton>\n        </StyledContactsItem>\n      );\n    });\n  };\n\n\n  return(\n    <StyledContactsList>\n      <CreateList />\n    </StyledContactsList>\n  )\n  \n}\n\nexport default ContactList;","import styled from 'styled-components';\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-weight: 700;\n  text-transform: uppercase;\n  color: 000;\n`;\nexport const FilterInput = styled.input`\n  padding-left: 10px;\n  padding-right: 10px;\n  height: 30px;\n  border: none;\n  border-radius: 5px;\n  box-shadow: rgba(60, 64, 67, 0.3) 0px 1px 2px 0px,\n    rgba(60, 64, 67, 0.15) 0px 2px 6px 2px;\n\n  &:focus {\n    outline: 1px solid #00b451;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { FilterInput, FilterLabel } from './filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const setFilterValue = event => {\n    let value = event.currentTarget.value.toUpperCase();\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <FilterLabel htmlFor=\"filter-field\">\n        Find contacts by name:\n        <FilterInput\n          id=\"filter-field\"\n          type=\"text\"\n          placeholder=\"Enter search query\"\n          onChange={setFilterValue}\n        />\n      </FilterLabel>\n    </>\n  );\n}\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  gap: 200px;\n  align-items: start;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  padding: 20px;\n  border-radius: 4px;\n  transform: translate(-50%, -50%) scale(1);\n`;\nexport const ContactsTitle = styled.h2`\n  margin-top: 0px;\n  color: #404bbf;\n`;\n","import Loader from 'components/Loader/Loader';\nimport ContactForm from 'components/contactForm/contactForm';\nimport ContactList from 'components/contactList/contactList';\nimport Filter from 'components/filter/filter';\n\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { requestContactsThunk, selectContactsError, selectContactsIsLoading, selectUserContacts } from 'redux/contactsSlice';\nimport { selectAuthentificated } from 'redux/selectors';\nimport { ContactsTitle, Container } from './ContactsPage.styled';\nconst ContactsPage = () => {\n   const error = useSelector(selectContactsError);\n   const isLoading = useSelector(selectContactsIsLoading);\n   const dispatch = useDispatch();\n  const auth = useSelector(selectAuthentificated);\n  const contacts = useSelector(selectUserContacts);\n\n   useEffect(() => {\n     if (!auth) return;\n\n     dispatch(requestContactsThunk());\n   }, [auth, dispatch]);\n\n  \n   return (\n     <Container className=\"App\">\n       <div>\n         <ContactsTitle>Phonebook</ContactsTitle>\n         <ContactForm />\n       </div>\n       <div>\n         <ContactsTitle>Contacts</ContactsTitle>\n         <Filter />\n         {error !== null && (\n           <p className=\"c-error\">\n             Oops, some error occured. Please, try again later. Error: {error}\n           </p>\n         )}\n         {contacts && <ContactList />}\n         {isLoading && <Loader />}\n       </div>\n     </Container>\n   );\n}\nexport default ContactsPage\n"],"names":["StyledContactForm","styled","StyledContactLabel","StyledContactInput","ContactsSubmitButton","contacts","useSelector","selectContacts","dispatch","useDispatch","useState","name","setName","number","setNumber","handleInputChange","event","target","value","onSubmit","data","preventDefault","map","cur","includes","alert","addContactThunk","htmlFor","id","onChange","type","title","required","StyledContactsList","StyledContactsItem","StyledContactsItemCircle","StyledContactsItemName","StyledContactsItemNumber","StyledContactsItemButton","filter","selectFilter","CreateList","fArr","toUpperCase","contact","onClick","Id","deleteContactThunk","FilterLabel","FilterInput","placeholder","currentTarget","setFilter","Container","ContactsTitle","error","selectContactsError","isLoading","selectContactsIsLoading","auth","selectAuthentificated","selectUserContacts","useEffect","requestContactsThunk","className","Loader"],"sourceRoot":""}